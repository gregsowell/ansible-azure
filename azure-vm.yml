---
- name: Create Azure VM
  hosts: localhost
  gather_facts: false
  vars: 
    os_type: windows
#    os_type: linux
    inventory_name: Azure Manual
    vm_name: ZZZTestDeploy1
    # inject this at run time via custom credential
    vm_password: "{{ gen1_pword }}"
    vm_username: "{{ gen1_user }}"
    RG_name: cloud-shell-storage-eastus
    virtual_network: testvn001
    sec_group: secgroup001
    subnet_name: subnet001
  tasks:
  - name: Create resource group
    azure_rm_resourcegroup:
      name: "{{ RG_name }}"
      location: eastus
    tags:
    - never
    - setup

  - name: Create virtual network
    azure_rm_virtualnetwork:
      resource_group: "{{ RG_name }}"
      name: "{{ virtual_network }}"
      address_prefixes: "172.29.0.0/16"
    tags:
    - never
    - setup

  - name: Add subnet
    azure_rm_subnet:
      resource_group: "{{ RG_name }}"
      name: "{{ subnet_name }}"
      address_prefix: "172.29.0.0/24"
      virtual_network: "{{ virtual_network }}"
    tags:
    - never
    - setup
#  - name: Create public IP address
#    azure_rm_publicipaddress:
#      resource_group: myResourceGroup
#      allocation_method: Static
#      name: "{{ vm_name }}_PublicIP"
#    register: output_ip_address
#  - name: Public IP of VM
#    debug:
#      msg: "The public IP is {{ output_ip_address.state.ip_address }}."

  - name: Create security group that allows SSH/HTTP/HTTPS
    azure_rm_securitygroup:
      resource_group: "{{ RG_name }}"
      name: "{{ sec_group }}"
      rules:
        - name: SSH
          protocol: Tcp
          destination_port_range: 22
          access: Allow
          priority: 101
          direction: Inbound
        - name: HTTP
          protocol: Tcp
          destination_port_range: 80
          access: Allow
          priority: 102
          direction: Inbound
        - name: HTTPS
          protocol: Tcp
          destination_port_range: 443
          access: Allow
          priority: 103
          direction: Inbound
        - name: WINRM
          protocol: Tcp
          destination_port_range: 5986
          access: Allow
          priority: 104
          direction: Inbound
        - name: WINRMUN
          protocol: Tcp
          destination_port_range: 5985
          access: Allow
          priority: 105
          direction: Inbound
    tags:
    - never
    - setup

  - name: Create virtual network interface card
    azure_rm_networkinterface:
      resource_group: "{{ RG_name }}"
      name: "{{ vm_name }}_NIC"
      virtual_network: "{{ virtual_network }}"
      subnet: "{{ subnet_name }}"
#      public_ip_name: "{{ vm_name }}_PublicIP"
      security_group: "{{ sec_group }}"
    register: vm_nic
#  - name: debug vm_nic
#    debug:
#      var: vm_nic

  - name: Create Linux VM
    when: os_type != "windows"
    azure_rm_virtualmachine:
      resource_group: "{{ RG_name }}"
      name: "{{ vm_name }}"
      vm_size: Standard_DS1_v2
      admin_username: "{{ vm_username }}"
      admin_password: "{{ vm_password }}"
#      ssh_password_enabled: false
#      ssh_public_keys:
#        - path: /home/azureuser/.ssh/authorized_keys
#          key_data: "<key_data>"
      network_interfaces: "{{ vm_name }}_NIC"
      # os_type defaults to linux, so specify windows if needed
      image:
        offer: CentOS
        publisher: OpenLogic
        sku: '7.5'
        version: latest

  - name: windows provision block
    when: "os_type == 'windows'"
    block:
      - name: Create Windows VM
        azure_rm_virtualmachine:
          resource_group: "{{ RG_name }}"
          name: "{{ vm_name }}"
          vm_size: Standard_DS1_v2
          admin_username: "{{ vm_username }}"
          admin_password: "{{ vm_password }}"
  #        ssh_password_enabled: false
  #        ssh_public_keys:
  #          - path: /home/azureuser/.ssh/authorized_keys
  #            key_data: "<key_data>"
          network_interfaces: "{{ vm_name }}_NIC"
          # os_type defaults to linux, so specify windows if needed
          os_type: Windows
          open_ports:
            - 3389
            - 5986
            - 5985
            - 22
          image:
            offer: WindowsServer
            publisher: MicrosoftWindowsServer
            sku: 2019-Datacenter
            version: latest

      - name: Create VM script extension to enable HTTPS WinRM listener
        azure_rm_virtualmachineextension:
          name: winrm-extension
          resource_group: "{{ RG_name }}"
          virtual_machine_name: "{{ vm_name }}"
          publisher: Microsoft.Compute
          virtual_machine_extension_type: CustomScriptExtension
          type_handler_version: '1.9'
          settings: '{"fileUris": ["https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"],"commandToExecute": "powershell -ExecutionPolicy Unrestricted -File ConfigureRemotingForAnsible.ps1"}'
#          settings: '{"fileUris": ["https://raw.githubusercontent.com/gregsowell/ansible-windows/main/install-ssh.ps1"],"commandToExecute": "powershell -ExecutionPolicy Unrestricted -File install-ssh.ps1"}'
          auto_upgrade_minor_version: true
        tags:
        - winrm

  - name: Add the host to AAP inventory
    awx.awx.host:
      name: "{{ vm_name }}"
      description: "Added via ansible"
      inventory: "{{ inventory_name }}"
      state: present
      variables:
        ansible_host: "{{ vm_nic.state.ip_configuration.private_ip_address }}"
